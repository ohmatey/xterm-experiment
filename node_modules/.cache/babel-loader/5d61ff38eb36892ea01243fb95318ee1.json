{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar EventEmitter_1 = require(\"../EventEmitter\");\n\nvar CharMeasure = function (_super) {\n  __extends(CharMeasure, _super);\n\n  function CharMeasure(document, parentElement) {\n    var _this = _super.call(this) || this;\n\n    _this._document = document;\n    _this._parentElement = parentElement;\n    _this._measureElement = _this._document.createElement('span');\n    _this._measureElement.style.position = 'absolute';\n    _this._measureElement.style.top = '0';\n    _this._measureElement.style.left = '-9999em';\n    _this._measureElement.style.lineHeight = 'normal';\n    _this._measureElement.textContent = 'W';\n\n    _this._measureElement.setAttribute('aria-hidden', 'true');\n\n    _this._parentElement.appendChild(_this._measureElement);\n\n    return _this;\n  }\n\n  Object.defineProperty(CharMeasure.prototype, \"width\", {\n    get: function () {\n      return this._width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CharMeasure.prototype, \"height\", {\n    get: function () {\n      return this._height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CharMeasure.prototype.measure = function (options) {\n    this._measureElement.style.fontFamily = options.fontFamily;\n    this._measureElement.style.fontSize = options.fontSize + \"px\";\n\n    var geometry = this._measureElement.getBoundingClientRect();\n\n    if (geometry.width === 0 || geometry.height === 0) {\n      return;\n    }\n\n    if (this._width !== geometry.width || this._height !== geometry.height) {\n      this._width = geometry.width;\n      this._height = Math.ceil(geometry.height);\n      this.emit('charsizechanged');\n    }\n  };\n\n  return CharMeasure;\n}(EventEmitter_1.EventEmitter);\n\nexports.CharMeasure = CharMeasure;","map":null,"metadata":{},"sourceType":"script"}