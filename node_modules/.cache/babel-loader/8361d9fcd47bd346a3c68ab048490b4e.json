{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar TextRenderLayer_1 = require(\"./TextRenderLayer\");\n\nvar SelectionRenderLayer_1 = require(\"./SelectionRenderLayer\");\n\nvar CursorRenderLayer_1 = require(\"./CursorRenderLayer\");\n\nvar ColorManager_1 = require(\"./ColorManager\");\n\nvar LinkRenderLayer_1 = require(\"./LinkRenderLayer\");\n\nvar EventEmitter_1 = require(\"../EventEmitter\");\n\nvar ScreenDprMonitor_1 = require(\"../utils/ScreenDprMonitor\");\n\nvar Renderer = function (_super) {\n  __extends(Renderer, _super);\n\n  function Renderer(_terminal, theme) {\n    var _this = _super.call(this) || this;\n\n    _this._terminal = _terminal;\n    _this._refreshRowsQueue = [];\n    _this._refreshAnimationFrame = null;\n    _this._isPaused = false;\n    _this._needsFullRefresh = false;\n    _this.colorManager = new ColorManager_1.ColorManager();\n\n    if (theme) {\n      _this.colorManager.setTheme(theme);\n    }\n\n    _this._renderLayers = [new TextRenderLayer_1.TextRenderLayer(_this._terminal.screenElement, 0, _this.colorManager.colors, _this._terminal.options.allowTransparency), new SelectionRenderLayer_1.SelectionRenderLayer(_this._terminal.screenElement, 1, _this.colorManager.colors), new LinkRenderLayer_1.LinkRenderLayer(_this._terminal.screenElement, 2, _this.colorManager.colors, _this._terminal), new CursorRenderLayer_1.CursorRenderLayer(_this._terminal.screenElement, 3, _this.colorManager.colors)];\n    _this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    _this._devicePixelRatio = window.devicePixelRatio;\n\n    _this._updateDimensions();\n\n    _this.onOptionsChanged();\n\n    _this._screenDprMonitor = new ScreenDprMonitor_1.ScreenDprMonitor();\n\n    _this._screenDprMonitor.setListener(function () {\n      return _this.onWindowResize(window.devicePixelRatio);\n    });\n\n    if ('IntersectionObserver' in window) {\n      var observer = new IntersectionObserver(function (e) {\n        return _this.onIntersectionChange(e[0]);\n      }, {\n        threshold: 0\n      });\n      observer.observe(_this._terminal.element);\n    }\n\n    return _this;\n  }\n\n  Renderer.prototype.onIntersectionChange = function (entry) {\n    this._isPaused = entry.intersectionRatio === 0;\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._terminal.refresh(0, this._terminal.rows - 1);\n    }\n  };\n\n  Renderer.prototype.onWindowResize = function (devicePixelRatio) {\n    if (this._devicePixelRatio !== devicePixelRatio) {\n      this._devicePixelRatio = devicePixelRatio;\n      this.onResize(this._terminal.cols, this._terminal.rows, true);\n    }\n  };\n\n  Renderer.prototype.setTheme = function (theme) {\n    var _this = this;\n\n    this.colorManager.setTheme(theme);\n\n    this._renderLayers.forEach(function (l) {\n      l.onThemeChanged(_this._terminal, _this.colorManager.colors);\n      l.reset(_this._terminal);\n    });\n\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this._terminal.refresh(0, this._terminal.rows - 1);\n    }\n\n    return this.colorManager.colors;\n  };\n\n  Renderer.prototype.onResize = function (cols, rows, didCharSizeChange) {\n    var _this = this;\n\n    this._updateDimensions();\n\n    this._renderLayers.forEach(function (l) {\n      return l.resize(_this._terminal, _this.dimensions, didCharSizeChange);\n    });\n\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this._terminal.refresh(0, this._terminal.rows - 1);\n    }\n\n    this._terminal.screenElement.style.width = this.dimensions.canvasWidth + this._terminal.viewport.scrollBarWidth + \"px\";\n    this._terminal.screenElement.style.height = this.dimensions.canvasHeight + \"px\";\n    this.emit('resize', {\n      width: this.dimensions.canvasWidth,\n      height: this.dimensions.canvasHeight\n    });\n  };\n\n  Renderer.prototype.onCharSizeChanged = function () {\n    this.onResize(this._terminal.cols, this._terminal.rows, true);\n  };\n\n  Renderer.prototype.onBlur = function () {\n    var _this = this;\n\n    this._runOperation(function (l) {\n      return l.onBlur(_this._terminal);\n    });\n  };\n\n  Renderer.prototype.onFocus = function () {\n    var _this = this;\n\n    this._runOperation(function (l) {\n      return l.onFocus(_this._terminal);\n    });\n  };\n\n  Renderer.prototype.onSelectionChanged = function (start, end) {\n    var _this = this;\n\n    this._runOperation(function (l) {\n      return l.onSelectionChanged(_this._terminal, start, end);\n    });\n  };\n\n  Renderer.prototype.onCursorMove = function () {\n    var _this = this;\n\n    this._runOperation(function (l) {\n      return l.onCursorMove(_this._terminal);\n    });\n  };\n\n  Renderer.prototype.onOptionsChanged = function () {\n    var _this = this;\n\n    this._runOperation(function (l) {\n      return l.onOptionsChanged(_this._terminal);\n    });\n  };\n\n  Renderer.prototype.clear = function () {\n    var _this = this;\n\n    this._runOperation(function (l) {\n      return l.reset(_this._terminal);\n    });\n  };\n\n  Renderer.prototype._runOperation = function (operation) {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this._renderLayers.forEach(function (l) {\n        return operation(l);\n      });\n    }\n  };\n\n  Renderer.prototype.queueRefresh = function (start, end) {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n\n    this._refreshRowsQueue.push({\n      start: start,\n      end: end\n    });\n\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(this._refreshLoop.bind(this));\n    }\n  };\n\n  Renderer.prototype._refreshLoop = function () {\n    var _this = this;\n\n    var start;\n    var end;\n\n    if (this._refreshRowsQueue.length > 4) {\n      start = 0;\n      end = this._terminal.rows - 1;\n    } else {\n      start = this._refreshRowsQueue[0].start;\n      end = this._refreshRowsQueue[0].end;\n\n      for (var i = 1; i < this._refreshRowsQueue.length; i++) {\n        if (this._refreshRowsQueue[i].start < start) {\n          start = this._refreshRowsQueue[i].start;\n        }\n\n        if (this._refreshRowsQueue[i].end > end) {\n          end = this._refreshRowsQueue[i].end;\n        }\n      }\n    }\n\n    this._refreshRowsQueue = [];\n    this._refreshAnimationFrame = null;\n    start = Math.max(start, 0);\n    end = Math.min(end, this._terminal.rows - 1);\n\n    this._renderLayers.forEach(function (l) {\n      return l.onGridChanged(_this._terminal, start, end);\n    });\n\n    this._terminal.emit('refresh', {\n      start: start,\n      end: end\n    });\n  };\n\n  Renderer.prototype._updateDimensions = function () {\n    if (!this._terminal.charMeasure.width || !this._terminal.charMeasure.height) {\n      return;\n    }\n\n    this.dimensions.scaledCharWidth = Math.floor(this._terminal.charMeasure.width * window.devicePixelRatio);\n    this.dimensions.scaledCharHeight = Math.ceil(this._terminal.charMeasure.height * window.devicePixelRatio);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n    this.dimensions.scaledCharTop = this._terminal.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n    this.dimensions.scaledCharLeft = Math.floor(this._terminal.options.letterSpacing / 2);\n    this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n  };\n\n  return Renderer;\n}(EventEmitter_1.EventEmitter);\n\nexports.Renderer = Renderer;","map":null,"metadata":{},"sourceType":"script"}