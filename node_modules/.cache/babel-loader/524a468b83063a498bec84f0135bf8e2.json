{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Types_1 = require(\"./Types\");\n\nvar MouseZoneManager_1 = require(\"./input/MouseZoneManager\");\n\nvar EventEmitter_1 = require(\"./EventEmitter\");\n\nvar protocolClause = '(https?:\\\\/\\\\/)';\nvar domainCharacterSet = '[\\\\da-z\\\\.-]+';\nvar negatedDomainCharacterSet = '[^\\\\da-z\\\\.-]+';\nvar domainBodyClause = '(' + domainCharacterSet + ')';\nvar tldClause = '([a-z\\\\.]{2,6})';\nvar ipClause = '((\\\\d{1,3}\\\\.){3}\\\\d{1,3})';\nvar localHostClause = '(localhost)';\nvar portClause = '(:\\\\d{1,5})';\nvar hostClause = '((' + domainBodyClause + '\\\\.' + tldClause + ')|' + ipClause + '|' + localHostClause + ')' + portClause + '?';\nvar pathClause = '(\\\\/[\\\\/\\\\w\\\\.\\\\-%~]*)*';\nvar queryStringHashFragmentCharacterSet = '[0-9\\\\w\\\\[\\\\]\\\\(\\\\)\\\\/\\\\?\\\\!#@$%&\\'*+,:;~\\\\=\\\\.\\\\-]*';\nvar queryStringClause = '(\\\\?' + queryStringHashFragmentCharacterSet + ')?';\nvar hashFragmentClause = '(#' + queryStringHashFragmentCharacterSet + ')?';\nvar negatedPathCharacterSet = '[^\\\\/\\\\w\\\\.\\\\-%]+';\nvar bodyClause = hostClause + pathClause + queryStringClause + hashFragmentClause;\nvar start = '(?:^|' + negatedDomainCharacterSet + ')(';\nvar end = ')($|' + negatedPathCharacterSet + ')';\nvar strictUrlRegex = new RegExp(start + protocolClause + bodyClause + end);\nvar HYPERTEXT_LINK_MATCHER_ID = 0;\n\nvar Linkifier = function (_super) {\n  __extends(Linkifier, _super);\n\n  function Linkifier(_terminal) {\n    var _this = _super.call(this) || this;\n\n    _this._terminal = _terminal;\n    _this._linkMatchers = [];\n    _this._nextLinkMatcherId = HYPERTEXT_LINK_MATCHER_ID;\n    _this._rowsToLinkify = {\n      start: null,\n      end: null\n    };\n\n    _this.registerLinkMatcher(strictUrlRegex, null, {\n      matchIndex: 1\n    });\n\n    return _this;\n  }\n\n  Linkifier.prototype.attachToDom = function (mouseZoneManager) {\n    this._mouseZoneManager = mouseZoneManager;\n  };\n\n  Linkifier.prototype.linkifyRows = function (start, end) {\n    var _this = this;\n\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    if (this._rowsToLinkify.start === null) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    this._mouseZoneManager.clearAll(start, end);\n\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    this._rowsTimeoutId = setTimeout(function () {\n      return _this._linkifyRows();\n    }, Linkifier.TIME_BEFORE_LINKIFY);\n  };\n\n  Linkifier.prototype._linkifyRows = function () {\n    this._rowsTimeoutId = null;\n\n    for (var i = this._rowsToLinkify.start; i <= this._rowsToLinkify.end; i++) {\n      this._linkifyRow(i);\n    }\n\n    this._rowsToLinkify.start = null;\n    this._rowsToLinkify.end = null;\n  };\n\n  Linkifier.prototype.setHypertextLinkHandler = function (handler) {\n    this._linkMatchers[HYPERTEXT_LINK_MATCHER_ID].handler = handler;\n  };\n\n  Linkifier.prototype.setHypertextValidationCallback = function (callback) {\n    this._linkMatchers[HYPERTEXT_LINK_MATCHER_ID].validationCallback = callback;\n  };\n\n  Linkifier.prototype.registerLinkMatcher = function (regex, handler, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (this._nextLinkMatcherId !== HYPERTEXT_LINK_MATCHER_ID && !handler) {\n      throw new Error('handler must be defined');\n    }\n\n    var matcher = {\n      id: this._nextLinkMatcherId++,\n      regex: regex,\n      handler: handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n\n    this._addLinkMatcherToList(matcher);\n\n    return matcher.id;\n  };\n\n  Linkifier.prototype._addLinkMatcherToList = function (matcher) {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n\n      return;\n    }\n\n    for (var i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  };\n\n  Linkifier.prototype.deregisterLinkMatcher = function (matcherId) {\n    for (var i = 1; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Linkifier.prototype._linkifyRow = function (rowIndex) {\n    var absoluteRowIndex = this._terminal.buffer.ydisp + rowIndex;\n\n    if (absoluteRowIndex >= this._terminal.buffer.lines.length) {\n      return;\n    }\n\n    var text = this._terminal.buffer.translateBufferLineToString(absoluteRowIndex, false);\n\n    for (var i = 0; i < this._linkMatchers.length; i++) {\n      this._doLinkifyRow(rowIndex, text, this._linkMatchers[i]);\n    }\n  };\n\n  Linkifier.prototype._doLinkifyRow = function (rowIndex, text, matcher, offset) {\n    var _this = this;\n\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    var result = [];\n    var isHttpLinkMatcher = matcher.id === HYPERTEXT_LINK_MATCHER_ID;\n    var match = text.match(matcher.regex);\n\n    if (!match || match.length === 0) {\n      return;\n    }\n\n    var uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n    var index = text.indexOf(uri);\n\n    if (matcher.validationCallback) {\n      matcher.validationCallback(uri, function (isValid) {\n        if (_this._rowsTimeoutId) {\n          return;\n        }\n\n        if (isValid) {\n          _this._addLink(offset + index, rowIndex, uri, matcher);\n        }\n      });\n    } else {\n      this._addLink(offset + index, rowIndex, uri, matcher);\n    }\n\n    var remainingStartIndex = index + uri.length;\n    var remainingText = text.substr(remainingStartIndex);\n\n    if (remainingText.length > 0) {\n      this._doLinkifyRow(rowIndex, remainingText, matcher, offset + remainingStartIndex);\n    }\n  };\n\n  Linkifier.prototype._addLink = function (x, y, uri, matcher) {\n    var _this = this;\n\n    this._mouseZoneManager.add(new MouseZoneManager_1.MouseZone(x + 1, x + 1 + uri.length, y + 1, function (e) {\n      if (matcher.handler) {\n        return matcher.handler(e, uri);\n      }\n\n      window.open(uri, '_blank');\n    }, function (e) {\n      _this.emit(Types_1.LinkHoverEventTypes.HOVER, {\n        x: x,\n        y: y,\n        length: uri.length\n      });\n\n      _this._terminal.element.style.cursor = 'pointer';\n    }, function (e) {\n      _this.emit(Types_1.LinkHoverEventTypes.TOOLTIP, {\n        x: x,\n        y: y,\n        length: uri.length\n      });\n\n      if (matcher.hoverTooltipCallback) {\n        matcher.hoverTooltipCallback(e, uri);\n      }\n    }, function () {\n      _this.emit(Types_1.LinkHoverEventTypes.LEAVE, {\n        x: x,\n        y: y,\n        length: uri.length\n      });\n\n      _this._terminal.element.style.cursor = '';\n\n      if (matcher.hoverLeaveCallback) {\n        matcher.hoverLeaveCallback();\n      }\n    }, function (e) {\n      if (matcher.willLinkActivate) {\n        return matcher.willLinkActivate(e, uri);\n      }\n\n      return true;\n    }));\n  };\n\n  Linkifier.TIME_BEFORE_LINKIFY = 200;\n  return Linkifier;\n}(EventEmitter_1.EventEmitter);\n\nexports.Linkifier = Linkifier;","map":null,"metadata":{},"sourceType":"script"}