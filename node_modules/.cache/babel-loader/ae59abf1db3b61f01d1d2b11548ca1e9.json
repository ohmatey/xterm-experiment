{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SearchHelper = function () {\n  function SearchHelper(_terminal) {\n    this._terminal = _terminal;\n  }\n\n  SearchHelper.prototype.findNext = function (term) {\n    if (!term || term.length === 0) {\n      return false;\n    }\n\n    var result;\n    var startRow = this._terminal.buffer.ydisp;\n\n    if (this._terminal.selectionManager.selectionEnd) {\n      startRow = this._terminal.selectionManager.selectionEnd[1];\n    }\n\n    for (var y = startRow + 1; y < this._terminal.buffer.ybase + this._terminal.rows; y++) {\n      result = this._findInLine(term, y);\n\n      if (result) {\n        break;\n      }\n    }\n\n    if (!result) {\n      for (var y = 0; y < startRow; y++) {\n        result = this._findInLine(term, y);\n\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    return this._selectResult(result);\n  };\n\n  SearchHelper.prototype.findPrevious = function (term) {\n    if (!term || term.length === 0) {\n      return false;\n    }\n\n    var result;\n    var startRow = this._terminal.buffer.ydisp;\n\n    if (this._terminal.selectionManager.selectionStart) {\n      startRow = this._terminal.selectionManager.selectionStart[1];\n    }\n\n    for (var y = startRow - 1; y >= 0; y--) {\n      result = this._findInLine(term, y);\n\n      if (result) {\n        break;\n      }\n    }\n\n    if (!result) {\n      for (var y = this._terminal.buffer.ybase + this._terminal.rows - 1; y > startRow; y--) {\n        result = this._findInLine(term, y);\n\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    return this._selectResult(result);\n  };\n\n  SearchHelper.prototype._findInLine = function (term, y) {\n    var lowerStringLine = this._terminal.buffer.translateBufferLineToString(y, true).toLowerCase();\n\n    var lowerTerm = term.toLowerCase();\n    var searchIndex = lowerStringLine.indexOf(lowerTerm);\n\n    if (searchIndex >= 0) {\n      return {\n        term: term,\n        col: searchIndex,\n        row: y\n      };\n    }\n  };\n\n  SearchHelper.prototype._selectResult = function (result) {\n    if (!result) {\n      return false;\n    }\n\n    this._terminal.selectionManager.setSelection(result.col, result.row, result.term.length);\n\n    this._terminal.scrollLines(result.row - this._terminal.buffer.ydisp, false);\n\n    return true;\n  };\n\n  return SearchHelper;\n}();\n\nexports.SearchHelper = SearchHelper;","map":null,"metadata":{},"sourceType":"script"}