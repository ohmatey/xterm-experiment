{"ast":null,"code":"(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.search = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof require == \"function\" && require;\n\n    for (var o = 0; o < r.length; o++) s(r[o]);\n\n    return s;\n  }({\n    1: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var SearchHelper = function () {\n        function SearchHelper(_terminal) {\n          this._terminal = _terminal;\n        }\n\n        SearchHelper.prototype.findNext = function (term) {\n          if (!term || term.length === 0) {\n            return false;\n          }\n\n          var result;\n          var startRow = this._terminal.buffer.ydisp;\n\n          if (this._terminal.selectionManager.selectionEnd) {\n            startRow = this._terminal.selectionManager.selectionEnd[1];\n          }\n\n          for (var y = startRow + 1; y < this._terminal.buffer.ybase + this._terminal.rows; y++) {\n            result = this._findInLine(term, y);\n\n            if (result) {\n              break;\n            }\n          }\n\n          if (!result) {\n            for (var y = 0; y < startRow; y++) {\n              result = this._findInLine(term, y);\n\n              if (result) {\n                break;\n              }\n            }\n          }\n\n          return this._selectResult(result);\n        };\n\n        SearchHelper.prototype.findPrevious = function (term) {\n          if (!term || term.length === 0) {\n            return false;\n          }\n\n          var result;\n          var startRow = this._terminal.buffer.ydisp;\n\n          if (this._terminal.selectionManager.selectionStart) {\n            startRow = this._terminal.selectionManager.selectionStart[1];\n          }\n\n          for (var y = startRow - 1; y >= 0; y--) {\n            result = this._findInLine(term, y);\n\n            if (result) {\n              break;\n            }\n          }\n\n          if (!result) {\n            for (var y = this._terminal.buffer.ybase + this._terminal.rows - 1; y > startRow; y--) {\n              result = this._findInLine(term, y);\n\n              if (result) {\n                break;\n              }\n            }\n          }\n\n          return this._selectResult(result);\n        };\n\n        SearchHelper.prototype._findInLine = function (term, y) {\n          var lowerStringLine = this._terminal.buffer.translateBufferLineToString(y, true).toLowerCase();\n\n          var lowerTerm = term.toLowerCase();\n          var searchIndex = lowerStringLine.indexOf(lowerTerm);\n\n          if (searchIndex >= 0) {\n            var line = this._terminal.buffer.lines.get(y);\n\n            for (var i = 0; i < searchIndex; i++) {\n              var charData = line[i];\n              var char = charData[1];\n\n              if (char.length > 1) {\n                searchIndex -= char.length - 1;\n              }\n\n              var charWidth = charData[2];\n\n              if (charWidth === 0) {\n                searchIndex++;\n              }\n            }\n\n            return {\n              term: term,\n              col: searchIndex,\n              row: y\n            };\n          }\n        };\n\n        SearchHelper.prototype._selectResult = function (result) {\n          if (!result) {\n            return false;\n          }\n\n          this._terminal.selectionManager.setSelection(result.col, result.row, result.term.length);\n\n          this._terminal.scrollLines(result.row - this._terminal.buffer.ydisp);\n\n          return true;\n        };\n\n        return SearchHelper;\n      }();\n\n      exports.SearchHelper = SearchHelper;\n    }, {}],\n    2: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var SearchHelper_1 = require(\"./SearchHelper\");\n\n      function findNext(terminal, term) {\n        var addonTerminal = terminal;\n\n        if (!addonTerminal.__searchHelper) {\n          addonTerminal.__searchHelper = new SearchHelper_1.SearchHelper(addonTerminal);\n        }\n\n        return addonTerminal.__searchHelper.findNext(term);\n      }\n\n      exports.findNext = findNext;\n\n      function findPrevious(terminal, term) {\n        var addonTerminal = terminal;\n\n        if (!addonTerminal.__searchHelper) {\n          addonTerminal.__searchHelper = new SearchHelper_1.SearchHelper(addonTerminal);\n        }\n\n        return addonTerminal.__searchHelper.findPrevious(term);\n      }\n\n      exports.findPrevious = findPrevious;\n\n      function apply(terminalConstructor) {\n        terminalConstructor.prototype.findNext = function (term) {\n          return findNext(this, term);\n        };\n\n        terminalConstructor.prototype.findPrevious = function (term) {\n          return findPrevious(this, term);\n        };\n      }\n\n      exports.apply = apply;\n    }, {\n      \"./SearchHelper\": 1\n    }]\n  }, {}, [2])(2);\n});","map":null,"metadata":{},"sourceType":"script"}