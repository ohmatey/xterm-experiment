{"ast":null,"code":"/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Dependencies that are used for multiple exports are required here only once\n */\nvar pathval = require('pathval');\n/*!\n * test utility\n */\n\n\nexports.test = require('./test');\n/*!\n * type utility\n */\n\nexports.type = require('type-detect');\n/*!\n * expectTypes utility\n */\n\nexports.expectTypes = require('./expectTypes');\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('deep-eql');\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = pathval.getPathInfo;\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = pathval.hasProperty;\n/*!\n * Function name\n */\n\nexports.getName = require('get-func-name');\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = require('./overwriteChainableMethod');\n/*!\n * Compare by inspect method\n */\n\nexports.compareByInspect = require('./compareByInspect');\n/*!\n * Get own enumerable property symbols method\n */\n\nexports.getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n/*!\n * Get own enumerable properties method\n */\n\nexports.getOwnEnumerableProperties = require('./getOwnEnumerableProperties');\n/*!\n * Checks error against a given set of criteria\n */\n\nexports.checkError = require('check-error');\n/*!\n * Proxify util\n */\n\nexports.proxify = require('./proxify');\n/*!\n * addLengthGuard util\n */\n\nexports.addLengthGuard = require('./addLengthGuard');\n/*!\n * isProxyEnabled helper\n */\n\nexports.isProxyEnabled = require('./isProxyEnabled');\n/*!\n * isNaN method\n */\n\nexports.isNaN = require('./isNaN');","map":null,"metadata":{},"sourceType":"script"}