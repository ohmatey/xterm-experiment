{"ast":null,"code":"(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.zmodem = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof require == \"function\" && require;\n\n    for (var o = 0; o < r.length; o++) s(r[o]);\n\n    return s;\n  }({\n    1: [function (require, module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      var zmodem;\n\n      function zmodemAttach(term, ws, opts) {\n        if (opts === void 0) {\n          opts = {};\n        }\n\n        var senderFunc = function (octets) {\n          return ws.send(new Uint8Array(octets));\n        };\n\n        var zsentry;\n\n        function _shouldWrite() {\n          return !!zsentry.get_confirmed_session() || !opts.noTerminalWriteOutsideSession;\n        }\n\n        zsentry = new zmodem.Sentry({\n          to_terminal: function (octets) {\n            if (_shouldWrite()) {\n              term.write(String.fromCharCode.apply(String, octets));\n            }\n          },\n          sender: senderFunc,\n          on_retract: function () {\n            return term.emit('zmodemRetract');\n          },\n          on_detect: function (detection) {\n            return term.emit('zmodemDetect', detection);\n          }\n        });\n\n        function handleWSMessage(evt) {\n          if (typeof evt.data === 'string') {\n            if (_shouldWrite()) {\n              term.write(evt.data);\n            }\n          } else {\n            zsentry.consume(evt.data);\n          }\n        }\n\n        ws.binaryType = 'arraybuffer';\n        ws.addEventListener('message', handleWSMessage);\n      }\n\n      exports.zmodemAttach = zmodemAttach;\n\n      function apply(terminalConstructor) {\n        zmodem = typeof window === 'object' ? window.ZModem : {\n          Browser: null\n        };\n        terminalConstructor.prototype.zmodemAttach = zmodemAttach.bind(this, this);\n        terminalConstructor.prototype.zmodemBrowser = zmodem.Browser;\n      }\n\n      exports.apply = apply;\n    }, {}]\n  }, {}, [1])(1);\n});","map":null,"metadata":{},"sourceType":"script"}