{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BufferSet_1 = require(\"./BufferSet\");\n\nvar Buffer_1 = require(\"./Buffer\");\n\nvar CompositionHelper_1 = require(\"./CompositionHelper\");\n\nvar EventEmitter_1 = require(\"./EventEmitter\");\n\nvar Viewport_1 = require(\"./Viewport\");\n\nvar Clipboard_1 = require(\"./handlers/Clipboard\");\n\nvar EscapeSequences_1 = require(\"./EscapeSequences\");\n\nvar InputHandler_1 = require(\"./InputHandler\");\n\nvar Parser_1 = require(\"./Parser\");\n\nvar Renderer_1 = require(\"./renderer/Renderer\");\n\nvar Linkifier_1 = require(\"./Linkifier\");\n\nvar SelectionManager_1 = require(\"./SelectionManager\");\n\nvar CharMeasure_1 = require(\"./utils/CharMeasure\");\n\nvar Browser = require(\"./shared/utils/Browser\");\n\nvar MouseHelper_1 = require(\"./utils/MouseHelper\");\n\nvar Sounds_1 = require(\"./utils/Sounds\");\n\nvar ColorManager_1 = require(\"./renderer/ColorManager\");\n\nvar MouseZoneManager_1 = require(\"./input/MouseZoneManager\");\n\nvar document = typeof window !== 'undefined' ? window.document : null;\nvar WRITE_BUFFER_PAUSE_THRESHOLD = 5;\nvar WRITE_BATCH_SIZE = 300;\nvar DEFAULT_OPTIONS = {\n  cols: 80,\n  rows: 24,\n  convertEol: false,\n  termName: 'xterm',\n  cursorBlink: false,\n  cursorStyle: 'block',\n  bellSound: Sounds_1.BELL_SOUND,\n  bellStyle: 'none',\n  enableBold: true,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  scrollback: 1000,\n  screenKeys: false,\n  debug: false,\n  macOptionIsMeta: false,\n  cancelEvents: false,\n  disableStdin: false,\n  useFlowControl: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: null,\n  rightClickSelectsWord: Browser.isMac\n};\n\nvar Terminal = function (_super) {\n  __extends(Terminal, _super);\n\n  function Terminal(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.browser = Browser;\n    _this.options = options;\n\n    _this.setup();\n\n    return _this;\n  }\n\n  Terminal.prototype.setup = function () {\n    var _this = this;\n\n    Object.keys(DEFAULT_OPTIONS).forEach(function (key) {\n      if (_this.options[key] == null) {\n        _this.options[key] = DEFAULT_OPTIONS[key];\n      }\n\n      _this[key] = _this.options[key];\n    });\n    this.parent = document ? document.body : null;\n    this.cols = this.options.cols;\n    this.rows = this.options.rows;\n\n    if (this.options.handler) {\n      this.on('data', this.options.handler);\n    }\n\n    this.cursorState = 0;\n    this.cursorHidden = false;\n    this.sendDataQueue = '';\n    this.customKeyEventHandler = null;\n    this.applicationKeypad = false;\n    this.applicationCursor = false;\n    this.originMode = false;\n    this.insertMode = false;\n    this.wraparoundMode = true;\n    this.bracketedPasteMode = false;\n    this.charset = null;\n    this.gcharset = null;\n    this.glevel = 0;\n    this.charsets = [null];\n    this.readable = true;\n    this.writable = true;\n    this.defAttr = 0 << 18 | 257 << 9 | 256 << 0;\n    this.curAttr = 0 << 18 | 257 << 9 | 256 << 0;\n    this.params = [];\n    this.currentParam = 0;\n    this.prefix = '';\n    this.postfix = '';\n    this.writeBuffer = [];\n    this.writeInProgress = false;\n    this.xoffSentToCatchUp = false;\n    this.writeStopped = false;\n    this.surrogateHigh = '';\n    this.userScrolling = false;\n    this.inputHandler = new InputHandler_1.InputHandler(this);\n    this.parser = new Parser_1.Parser(this.inputHandler, this);\n    this.renderer = this.renderer || null;\n    this.selectionManager = this.selectionManager || null;\n    this.linkifier = this.linkifier || new Linkifier_1.Linkifier(this);\n    this._mouseZoneManager = this._mouseZoneManager || null;\n    this.buffers = new BufferSet_1.BufferSet(this);\n\n    if (this.selectionManager) {\n      this.selectionManager.clearSelection();\n      this.selectionManager.initBuffersListeners();\n    }\n  };\n\n  Object.defineProperty(Terminal.prototype, \"buffer\", {\n    get: function () {\n      return this.buffers.active;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Terminal.prototype.eraseAttr = function () {\n    return this.defAttr & ~0x1ff | this.curAttr & 0x1ff;\n  };\n\n  Terminal.prototype.focus = function () {\n    if (this.textarea) {\n      this.textarea.focus();\n    }\n  };\n\n  Object.defineProperty(Terminal.prototype, \"isFocused\", {\n    get: function () {\n      return document.activeElement === this.textarea;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Terminal.prototype.getOption = function (key) {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n\n    if (typeof this.options[key] !== 'undefined') {\n      return this.options[key];\n    }\n\n    return this[key];\n  };\n\n  Terminal.prototype.setOption = function (key, value) {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n\n    switch (key) {\n      case 'bellStyle':\n        if (!value) {\n          value = 'none';\n        }\n\n        break;\n\n      case 'cursorStyle':\n        if (!value) {\n          value = 'block';\n        }\n\n        break;\n\n      case 'fontWeight':\n        if (!value) {\n          value = 'normal';\n        }\n\n        break;\n\n      case 'fontWeightBold':\n        if (!value) {\n          value = 'bold';\n        }\n\n        break;\n\n      case 'lineHeight':\n        if (value < 1) {\n          console.warn(key + \" cannot be less than 1, value: \" + value);\n          return;\n        }\n\n      case 'tabStopWidth':\n        if (value < 1) {\n          console.warn(key + \" cannot be less than 1, value: \" + value);\n          return;\n        }\n\n        break;\n\n      case 'theme':\n        if (this.renderer) {\n          this._setTheme(value);\n\n          return;\n        }\n\n        break;\n\n      case 'scrollback':\n        value = Math.min(value, Buffer_1.MAX_BUFFER_SIZE);\n\n        if (value < 0) {\n          console.warn(key + \" cannot be less than 0, value: \" + value);\n          return;\n        }\n\n        if (this.options[key] !== value) {\n          var newBufferLength = this.rows + value;\n\n          if (this.buffer.lines.length > newBufferLength) {\n            var amountToTrim = this.buffer.lines.length - newBufferLength;\n            var needsRefresh = this.buffer.ydisp - amountToTrim < 0;\n            this.buffer.lines.trimStart(amountToTrim);\n            this.buffer.ybase = Math.max(this.buffer.ybase - amountToTrim, 0);\n            this.buffer.ydisp = Math.max(this.buffer.ydisp - amountToTrim, 0);\n\n            if (needsRefresh) {\n              this.refresh(0, this.rows - 1);\n            }\n          }\n        }\n\n        break;\n    }\n\n    this[key] = value;\n    this.options[key] = value;\n\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        this.renderer.clear();\n        this.charMeasure.measure(this.options);\n        break;\n\n      case 'enableBold':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n        var didCharSizeChange = key === 'fontWeight' || key === 'fontWeightBold' || key === 'enableBold';\n        this.renderer.clear();\n        this.renderer.onResize(this.cols, this.rows, didCharSizeChange);\n        this.refresh(0, this.rows - 1);\n\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        this.viewport.syncScrollArea();\n        break;\n\n      case 'tabStopWidth':\n        this.buffers.setupTabStops();\n        break;\n\n      case 'bellSound':\n      case 'bellStyle':\n        this.syncBellSound();\n        break;\n    }\n\n    if (this.renderer) {\n      this.renderer.onOptionsChanged();\n    }\n  };\n\n  Terminal.prototype._onTextAreaFocus = function () {\n    if (this.sendFocus) {\n      this.send(EscapeSequences_1.C0.ESC + '[I');\n    }\n\n    this.element.classList.add('focus');\n    this.showCursor();\n    this.emit('focus');\n  };\n\n  Terminal.prototype.blur = function () {\n    return this.textarea.blur();\n  };\n\n  Terminal.prototype._onTextAreaBlur = function () {\n    this.refresh(this.buffer.y, this.buffer.y);\n\n    if (this.sendFocus) {\n      this.send(EscapeSequences_1.C0.ESC + '[O');\n    }\n\n    this.element.classList.remove('focus');\n    this.emit('blur');\n  };\n\n  Terminal.prototype.initGlobal = function () {\n    var _this = this;\n\n    this.bindKeys();\n    on(this.element, 'copy', function (event) {\n      if (!_this.hasSelection()) {\n        return;\n      }\n\n      Clipboard_1.copyHandler(event, _this, _this.selectionManager);\n    });\n\n    var pasteHandlerWrapper = function (event) {\n      return Clipboard_1.pasteHandler(event, _this);\n    };\n\n    on(this.textarea, 'paste', pasteHandlerWrapper);\n    on(this.element, 'paste', pasteHandlerWrapper);\n\n    if (Browser.isFirefox) {\n      on(this.element, 'mousedown', function (event) {\n        if (event.button === 2) {\n          Clipboard_1.rightClickHandler(event, _this.textarea, _this.selectionManager, _this.options.rightClickSelectsWord);\n        }\n      });\n    } else {\n      on(this.element, 'contextmenu', function (event) {\n        Clipboard_1.rightClickHandler(event, _this.textarea, _this.selectionManager, _this.options.rightClickSelectsWord);\n      });\n    }\n\n    if (Browser.isLinux) {\n      on(this.element, 'auxclick', function (event) {\n        if (event.button === 1) {\n          Clipboard_1.moveTextAreaUnderMouseCursor(event, _this.textarea);\n        }\n      });\n    }\n  };\n\n  Terminal.prototype.bindKeys = function () {\n    var _this = this;\n\n    var self = this;\n    on(this.element, 'keydown', function (ev) {\n      if (document.activeElement !== this) {\n        return;\n      }\n\n      self._keyDown(ev);\n    }, true);\n    on(this.element, 'keypress', function (ev) {\n      if (document.activeElement !== this) {\n        return;\n      }\n\n      self._keyPress(ev);\n    }, true);\n    on(this.element, 'keyup', function (ev) {\n      if (!wasMondifierKeyOnlyEvent(ev)) {\n        _this.focus();\n      }\n    }, true);\n    on(this.textarea, 'keydown', function (ev) {\n      _this._keyDown(ev);\n    }, true);\n    on(this.textarea, 'keypress', function (ev) {\n      _this._keyPress(ev);\n\n      _this.textarea.value = '';\n    }, true);\n    on(this.textarea, 'compositionstart', function () {\n      return _this.compositionHelper.compositionstart();\n    });\n    on(this.textarea, 'compositionupdate', function (e) {\n      return _this.compositionHelper.compositionupdate(e);\n    });\n    on(this.textarea, 'compositionend', function () {\n      return _this.compositionHelper.compositionend();\n    });\n    this.on('refresh', function () {\n      return _this.compositionHelper.updateCompositionElements();\n    });\n    this.on('refresh', function (data) {\n      return _this.queueLinkification(data.start, data.end);\n    });\n  };\n\n  Terminal.prototype.open = function (parent) {\n    var _this = this;\n\n    var i = 0;\n    var div;\n    this.parent = parent || this.parent;\n\n    if (!this.parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    this.context = this.parent.ownerDocument.defaultView;\n    this.document = this.parent.ownerDocument;\n    this.body = this.document.body;\n    this.element = this.document.createElement('div');\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    this.parent.appendChild(this.element);\n    var fragment = document.createDocumentFragment();\n    this.viewportElement = document.createElement('div');\n    this.viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this.viewportElement);\n    this.viewportScrollArea = document.createElement('div');\n    this.viewportScrollArea.classList.add('xterm-scroll-area');\n    this.viewportElement.appendChild(this.viewportScrollArea);\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    this.helperContainer = document.createElement('div');\n    this.helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this.helperContainer);\n    fragment.appendChild(this.screenElement);\n    this._mouseZoneManager = new MouseZoneManager_1.MouseZoneManager(this);\n    this.on('scroll', function () {\n      return _this._mouseZoneManager.clearAll();\n    });\n    this.linkifier.attachToDom(this._mouseZoneManager);\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.textarea.addEventListener('focus', function () {\n      return _this._onTextAreaFocus();\n    });\n    this.textarea.addEventListener('blur', function () {\n      return _this._onTextAreaBlur();\n    });\n    this.helperContainer.appendChild(this.textarea);\n    this.compositionView = document.createElement('div');\n    this.compositionView.classList.add('composition-view');\n    this.compositionHelper = new CompositionHelper_1.CompositionHelper(this.textarea, this.compositionView, this);\n    this.helperContainer.appendChild(this.compositionView);\n    this.charSizeStyleElement = document.createElement('style');\n    this.helperContainer.appendChild(this.charSizeStyleElement);\n    this.charMeasure = new CharMeasure_1.CharMeasure(document, this.helperContainer);\n    this.syncBellSound();\n    this.element.appendChild(fragment);\n    this.renderer = new Renderer_1.Renderer(this, this.options.theme);\n    this.options.theme = null;\n    this.viewport = new Viewport_1.Viewport(this, this.viewportElement, this.viewportScrollArea, this.charMeasure);\n    this.viewport.onThemeChanged(this.renderer.colorManager.colors);\n    this.on('cursormove', function () {\n      return _this.renderer.onCursorMove();\n    });\n    this.on('resize', function () {\n      return _this.renderer.onResize(_this.cols, _this.rows, false);\n    });\n    this.on('blur', function () {\n      return _this.renderer.onBlur();\n    });\n    this.on('focus', function () {\n      return _this.renderer.onFocus();\n    });\n    this.charMeasure.on('charsizechanged', function () {\n      return _this.renderer.onResize(_this.cols, _this.rows, true);\n    });\n    this.renderer.on('resize', function (dimensions) {\n      return _this.viewport.syncScrollArea();\n    });\n    this.selectionManager = new SelectionManager_1.SelectionManager(this, this.charMeasure);\n    this.element.addEventListener('mousedown', function (e) {\n      return _this.selectionManager.onMouseDown(e);\n    });\n    this.selectionManager.on('refresh', function (data) {\n      return _this.renderer.onSelectionChanged(data.start, data.end);\n    });\n    this.selectionManager.on('newselection', function (text) {\n      _this.textarea.value = text;\n\n      _this.textarea.focus();\n\n      _this.textarea.select();\n    });\n    this.on('scroll', function () {\n      _this.viewport.syncScrollArea();\n\n      _this.selectionManager.refresh();\n    });\n    this.viewportElement.addEventListener('scroll', function () {\n      return _this.selectionManager.refresh();\n    });\n    this.mouseHelper = new MouseHelper_1.MouseHelper(this.renderer);\n    this.charMeasure.measure(this.options);\n    this.refresh(0, this.rows - 1);\n    this.initGlobal();\n    this.bindMouse();\n  };\n\n  Terminal.prototype._setTheme = function (theme) {\n    var colors = this.renderer.setTheme(theme);\n\n    if (this.viewport) {\n      this.viewport.onThemeChanged(colors);\n    }\n  };\n\n  Terminal.applyAddon = function (addon) {\n    addon.apply(Terminal);\n  };\n\n  Terminal.prototype.bindMouse = function () {\n    var _this = this;\n\n    var el = this.element;\n    var self = this;\n    var pressed = 32;\n\n    function sendButton(ev) {\n      var button;\n      var pos;\n      button = getButton(ev);\n      pos = self.mouseHelper.getRawByteCoords(ev, self.screenElement, self.charMeasure, self.options.lineHeight, self.cols, self.rows);\n      if (!pos) return;\n      sendEvent(button, pos);\n\n      switch (ev.overrideType || ev.type) {\n        case 'mousedown':\n          pressed = button;\n          break;\n\n        case 'mouseup':\n          pressed = 32;\n          break;\n\n        case 'wheel':\n          break;\n      }\n    }\n\n    function sendMove(ev) {\n      var button = pressed;\n      var pos = self.mouseHelper.getRawByteCoords(ev, self.screenElement, self.charMeasure, self.options.lineHeight, self.cols, self.rows);\n      if (!pos) return;\n      button += 32;\n      sendEvent(button, pos);\n    }\n\n    function encode(data, ch) {\n      if (!self.utfMouse) {\n        if (ch === 255) {\n          data.push(0);\n          return;\n        }\n\n        if (ch > 127) ch = 127;\n        data.push(ch);\n      } else {\n        if (ch === 2047) {\n          data.push(0);\n          return;\n        }\n\n        if (ch < 127) {\n          data.push(ch);\n        } else {\n          if (ch > 2047) ch = 2047;\n          data.push(0xC0 | ch >> 6);\n          data.push(0x80 | ch & 0x3F);\n        }\n      }\n    }\n\n    function sendEvent(button, pos) {\n      if (self.vt300Mouse) {\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        var data_1 = EscapeSequences_1.C0.ESC + '[24';\n        if (button === 0) data_1 += '1';else if (button === 1) data_1 += '3';else if (button === 2) data_1 += '5';else if (button === 3) return;else data_1 += '0';\n        data_1 += '~[' + pos.x + ',' + pos.y + ']\\r';\n        self.send(data_1);\n        return;\n      }\n\n      if (self.decLocator) {\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        if (button === 0) button = 2;else if (button === 1) button = 4;else if (button === 2) button = 6;else if (button === 3) button = 3;\n        self.send(EscapeSequences_1.C0.ESC + '[' + button + ';' + (button === 3 ? 4 : 0) + ';' + pos.y + ';' + pos.x + ';' + pos.page || 0 + '&w');\n        return;\n      }\n\n      if (self.urxvtMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        pos.x++;\n        pos.y++;\n        self.send(EscapeSequences_1.C0.ESC + '[' + button + ';' + pos.x + ';' + pos.y + 'M');\n        return;\n      }\n\n      if (self.sgrMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        self.send(EscapeSequences_1.C0.ESC + '[<' + (((button & 3) === 3 ? button & ~3 : button) - 32) + ';' + pos.x + ';' + pos.y + ((button & 3) === 3 ? 'm' : 'M'));\n        return;\n      }\n\n      var data = [];\n      encode(data, button);\n      encode(data, pos.x);\n      encode(data, pos.y);\n      self.send(EscapeSequences_1.C0.ESC + '[M' + String.fromCharCode.apply(String, data));\n    }\n\n    function getButton(ev) {\n      var button;\n      var shift;\n      var meta;\n      var ctrl;\n      var mod;\n\n      switch (ev.overrideType || ev.type) {\n        case 'mousedown':\n          button = ev.button != null ? +ev.button : ev.which != null ? ev.which - 1 : null;\n\n          if (Browser.isMSIE) {\n            button = button === 1 ? 0 : button === 4 ? 1 : button;\n          }\n\n          break;\n\n        case 'mouseup':\n          button = 3;\n          break;\n\n        case 'DOMMouseScroll':\n          button = ev.detail < 0 ? 64 : 65;\n          break;\n\n        case 'wheel':\n          button = ev.wheelDeltaY > 0 ? 64 : 65;\n          break;\n      }\n\n      shift = ev.shiftKey ? 4 : 0;\n      meta = ev.metaKey ? 8 : 0;\n      ctrl = ev.ctrlKey ? 16 : 0;\n      mod = shift | meta | ctrl;\n\n      if (self.vt200Mouse) {\n        mod &= ctrl;\n      } else if (!self.normalMouse) {\n        mod = 0;\n      }\n\n      button = 32 + (mod << 2) + button;\n      return button;\n    }\n\n    on(el, 'mousedown', function (ev) {\n      ev.preventDefault();\n\n      _this.focus();\n\n      if (!_this.mouseEvents || _this.selectionManager.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendButton(ev);\n\n      if (_this.vt200Mouse) {\n        ev.overrideType = 'mouseup';\n        sendButton(ev);\n        return _this.cancel(ev);\n      }\n\n      if (_this.normalMouse) on(_this.document, 'mousemove', sendMove);\n\n      if (!_this.x10Mouse) {\n        var handler_1 = function (ev) {\n          sendButton(ev);\n          if (_this.normalMouse) off(_this.document, 'mousemove', sendMove);\n          off(_this.document, 'mouseup', handler_1);\n          return _this.cancel(ev);\n        };\n\n        on(_this.document, 'mouseup', handler_1);\n      }\n\n      return _this.cancel(ev);\n    });\n    on(el, 'wheel', function (ev) {\n      if (!_this.mouseEvents) return;\n      if (_this.x10Mouse || _this.vt300Mouse || _this.decLocator) return;\n      sendButton(ev);\n      ev.preventDefault();\n    });\n    on(el, 'wheel', function (ev) {\n      if (_this.mouseEvents) return;\n\n      _this.viewport.onWheel(ev);\n\n      return _this.cancel(ev);\n    });\n    on(el, 'touchstart', function (ev) {\n      if (_this.mouseEvents) return;\n\n      _this.viewport.onTouchStart(ev);\n\n      return _this.cancel(ev);\n    });\n    on(el, 'touchmove', function (ev) {\n      if (_this.mouseEvents) return;\n\n      _this.viewport.onTouchMove(ev);\n\n      return _this.cancel(ev);\n    });\n  };\n\n  Terminal.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.readable = false;\n    this.writable = false;\n\n    this.handler = function () {};\n\n    this.write = function () {};\n\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  };\n\n  Terminal.prototype.refresh = function (start, end) {\n    if (this.renderer) {\n      this.renderer.queueRefresh(start, end);\n    }\n  };\n\n  Terminal.prototype.queueLinkification = function (start, end) {\n    if (this.linkifier) {\n      this.linkifier.linkifyRows(start, end);\n    }\n  };\n\n  Terminal.prototype.showCursor = function () {\n    if (!this.cursorState) {\n      this.cursorState = 1;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  };\n\n  Terminal.prototype.scroll = function (isWrapped) {\n    var newLine = this.blankLine(undefined, isWrapped);\n    var topRow = this.buffer.ybase + this.buffer.scrollTop;\n    var bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      var willBufferBeTrimmed = this.buffer.lines.length === this.buffer.lines.maxLength;\n\n      if (bottomRow === this.buffer.lines.length - 1) {\n        this.buffer.lines.push(newLine);\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine);\n      }\n\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n\n        if (!this.userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        if (this.userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      var scrollRegionHeight = bottomRow - topRow + 1;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine);\n    }\n\n    if (!this.userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    this.updateRange(this.buffer.scrollTop);\n    this.updateRange(this.buffer.scrollBottom);\n    this.emit('scroll', this.buffer.ydisp);\n  };\n\n  Terminal.prototype.scrollLines = function (disp, suppressScrollEvent) {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n\n      this.userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this.userScrolling = false;\n    }\n\n    var oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this.emit('scroll', this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  };\n\n  Terminal.prototype.scrollPages = function (pageCount) {\n    this.scrollLines(pageCount * (this.rows - 1));\n  };\n\n  Terminal.prototype.scrollToTop = function () {\n    this.scrollLines(-this.buffer.ydisp);\n  };\n\n  Terminal.prototype.scrollToBottom = function () {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  };\n\n  Terminal.prototype.write = function (data) {\n    var _this = this;\n\n    this.writeBuffer.push(data);\n\n    if (this.options.useFlowControl && !this.xoffSentToCatchUp && this.writeBuffer.length >= WRITE_BUFFER_PAUSE_THRESHOLD) {\n      this.send(EscapeSequences_1.C0.DC3);\n      this.xoffSentToCatchUp = true;\n    }\n\n    if (!this.writeInProgress && this.writeBuffer.length > 0) {\n      this.writeInProgress = true;\n      setTimeout(function () {\n        _this.innerWrite();\n      });\n    }\n  };\n\n  Terminal.prototype.innerWrite = function () {\n    var _this = this;\n\n    var writeBatch = this.writeBuffer.splice(0, WRITE_BATCH_SIZE);\n\n    while (writeBatch.length > 0) {\n      var data = writeBatch.shift();\n\n      if (this.xoffSentToCatchUp && writeBatch.length === 0 && this.writeBuffer.length === 0) {\n        this.send(EscapeSequences_1.C0.DC1);\n        this.xoffSentToCatchUp = false;\n      }\n\n      this.refreshStart = this.buffer.y;\n      this.refreshEnd = this.buffer.y;\n      var state = this.parser.parse(data);\n      this.parser.setState(state);\n      this.updateRange(this.buffer.y);\n      this.refresh(this.refreshStart, this.refreshEnd);\n    }\n\n    if (this.writeBuffer.length > 0) {\n      setTimeout(function () {\n        return _this.innerWrite();\n      }, 0);\n    } else {\n      this.writeInProgress = false;\n    }\n  };\n\n  Terminal.prototype.writeln = function (data) {\n    this.write(data + '\\r\\n');\n  };\n\n  Terminal.prototype.attachCustomKeyEventHandler = function (customKeyEventHandler) {\n    this.customKeyEventHandler = customKeyEventHandler;\n  };\n\n  Terminal.prototype.setHypertextLinkHandler = function (handler) {\n    if (!this.linkifier) {\n      throw new Error('Cannot attach a hypertext link handler before Terminal.open is called');\n    }\n\n    this.linkifier.setHypertextLinkHandler(handler);\n    this.refresh(0, this.rows - 1);\n  };\n\n  Terminal.prototype.setHypertextValidationCallback = function (callback) {\n    if (!this.linkifier) {\n      throw new Error('Cannot attach a hypertext validation callback before Terminal.open is called');\n    }\n\n    this.linkifier.setHypertextValidationCallback(callback);\n    this.refresh(0, this.rows - 1);\n  };\n\n  Terminal.prototype.registerLinkMatcher = function (regex, handler, options) {\n    if (this.linkifier) {\n      var matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n      this.refresh(0, this.rows - 1);\n      return matcherId;\n    }\n\n    return 0;\n  };\n\n  Terminal.prototype.deregisterLinkMatcher = function (matcherId) {\n    if (this.linkifier) {\n      if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n        this.refresh(0, this.rows - 1);\n      }\n    }\n  };\n\n  Terminal.prototype.hasSelection = function () {\n    return this.selectionManager ? this.selectionManager.hasSelection : false;\n  };\n\n  Terminal.prototype.getSelection = function () {\n    return this.selectionManager ? this.selectionManager.selectionText : '';\n  };\n\n  Terminal.prototype.clearSelection = function () {\n    if (this.selectionManager) {\n      this.selectionManager.clearSelection();\n    }\n  };\n\n  Terminal.prototype.selectAll = function () {\n    if (this.selectionManager) {\n      this.selectionManager.selectAll();\n    }\n  };\n\n  Terminal.prototype._keyDown = function (ev) {\n    if (this.customKeyEventHandler && this.customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    if (!this.compositionHelper.keydown(ev)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n\n      return false;\n    }\n\n    var result = this._evaluateKeyEscapeSequence(ev);\n\n    if (result.key === EscapeSequences_1.C0.DC3) {\n      this.writeStopped = true;\n    } else if (result.key === EscapeSequences_1.C0.DC1) {\n      this.writeStopped = false;\n    }\n\n    if (result.scrollLines) {\n      this.scrollLines(result.scrollLines);\n      return this.cancel(ev, true);\n    }\n\n    if (this._isThirdLevelShift(this.browser, ev)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      this.cancel(ev, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    this.emit('keydown', ev);\n    this.emit('key', result.key, ev);\n    this.showCursor();\n    this.handler(result.key);\n    return this.cancel(ev, true);\n  };\n\n  Terminal.prototype._isThirdLevelShift = function (browser, ev) {\n    var thirdLevelKey = browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey || browser.isMSWindows && ev.altKey && ev.ctrlKey && !ev.metaKey;\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  };\n\n  Terminal.prototype._evaluateKeyEscapeSequence = function (ev) {\n    var result = {\n      cancel: false,\n      key: undefined,\n      scrollLines: undefined\n    };\n    var modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n\n    switch (ev.keyCode) {\n      case 0:\n        if (ev.key === 'UIKeyInputUpArrow') {\n          if (this.applicationCursor) {\n            result.key = EscapeSequences_1.C0.ESC + 'OA';\n          } else {\n            result.key = EscapeSequences_1.C0.ESC + '[A';\n          }\n        } else if (ev.key === 'UIKeyInputLeftArrow') {\n          if (this.applicationCursor) {\n            result.key = EscapeSequences_1.C0.ESC + 'OD';\n          } else {\n            result.key = EscapeSequences_1.C0.ESC + '[D';\n          }\n        } else if (ev.key === 'UIKeyInputRightArrow') {\n          if (this.applicationCursor) {\n            result.key = EscapeSequences_1.C0.ESC + 'OC';\n          } else {\n            result.key = EscapeSequences_1.C0.ESC + '[C';\n          }\n        } else if (ev.key === 'UIKeyInputDownArrow') {\n          if (this.applicationCursor) {\n            result.key = EscapeSequences_1.C0.ESC + 'OB';\n          } else {\n            result.key = EscapeSequences_1.C0.ESC + '[B';\n          }\n        }\n\n        break;\n\n      case 8:\n        if (ev.shiftKey) {\n          result.key = EscapeSequences_1.C0.BS;\n          break;\n        } else if (ev.altKey) {\n          result.key = EscapeSequences_1.C0.ESC + EscapeSequences_1.C0.DEL;\n          break;\n        }\n\n        result.key = EscapeSequences_1.C0.DEL;\n        break;\n\n      case 9:\n        if (ev.shiftKey) {\n          result.key = EscapeSequences_1.C0.ESC + '[Z';\n          break;\n        }\n\n        result.key = EscapeSequences_1.C0.HT;\n        result.cancel = true;\n        break;\n\n      case 13:\n        result.key = EscapeSequences_1.C0.CR;\n        result.cancel = true;\n        break;\n\n      case 27:\n        result.key = EscapeSequences_1.C0.ESC;\n        result.cancel = true;\n        break;\n\n      case 37:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'D';\n\n          if (result.key === EscapeSequences_1.C0.ESC + '[1;3D') {\n            result.key = this.browser.isMac ? EscapeSequences_1.C0.ESC + 'b' : EscapeSequences_1.C0.ESC + '[1;5D';\n          }\n        } else if (this.applicationCursor) {\n          result.key = EscapeSequences_1.C0.ESC + 'OD';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[D';\n        }\n\n        break;\n\n      case 39:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'C';\n\n          if (result.key === EscapeSequences_1.C0.ESC + '[1;3C') {\n            result.key = this.browser.isMac ? EscapeSequences_1.C0.ESC + 'f' : EscapeSequences_1.C0.ESC + '[1;5C';\n          }\n        } else if (this.applicationCursor) {\n          result.key = EscapeSequences_1.C0.ESC + 'OC';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[C';\n        }\n\n        break;\n\n      case 38:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'A';\n\n          if (result.key === EscapeSequences_1.C0.ESC + '[1;3A') {\n            result.key = EscapeSequences_1.C0.ESC + '[1;5A';\n          }\n        } else if (this.applicationCursor) {\n          result.key = EscapeSequences_1.C0.ESC + 'OA';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[A';\n        }\n\n        break;\n\n      case 40:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'B';\n\n          if (result.key === EscapeSequences_1.C0.ESC + '[1;3B') {\n            result.key = EscapeSequences_1.C0.ESC + '[1;5B';\n          }\n        } else if (this.applicationCursor) {\n          result.key = EscapeSequences_1.C0.ESC + 'OB';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[B';\n        }\n\n        break;\n\n      case 45:\n        if (!ev.shiftKey && !ev.ctrlKey) {\n          result.key = EscapeSequences_1.C0.ESC + '[2~';\n        }\n\n        break;\n\n      case 46:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[3;' + (modifiers + 1) + '~';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[3~';\n        }\n\n        break;\n\n      case 36:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'H';\n        } else if (this.applicationCursor) {\n          result.key = EscapeSequences_1.C0.ESC + 'OH';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[H';\n        }\n\n        break;\n\n      case 35:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'F';\n        } else if (this.applicationCursor) {\n          result.key = EscapeSequences_1.C0.ESC + 'OF';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[F';\n        }\n\n        break;\n\n      case 33:\n        if (ev.shiftKey) {\n          result.scrollLines = -(this.rows - 1);\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[5~';\n        }\n\n        break;\n\n      case 34:\n        if (ev.shiftKey) {\n          result.scrollLines = this.rows - 1;\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[6~';\n        }\n\n        break;\n\n      case 112:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'P';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + 'OP';\n        }\n\n        break;\n\n      case 113:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + 'OQ';\n        }\n\n        break;\n\n      case 114:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'R';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + 'OR';\n        }\n\n        break;\n\n      case 115:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[1;' + (modifiers + 1) + 'S';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + 'OS';\n        }\n\n        break;\n\n      case 116:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[15;' + (modifiers + 1) + '~';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[15~';\n        }\n\n        break;\n\n      case 117:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[17;' + (modifiers + 1) + '~';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[17~';\n        }\n\n        break;\n\n      case 118:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[18;' + (modifiers + 1) + '~';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[18~';\n        }\n\n        break;\n\n      case 119:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[19;' + (modifiers + 1) + '~';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[19~';\n        }\n\n        break;\n\n      case 120:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[20;' + (modifiers + 1) + '~';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[20~';\n        }\n\n        break;\n\n      case 121:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[21;' + (modifiers + 1) + '~';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[21~';\n        }\n\n        break;\n\n      case 122:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[23;' + (modifiers + 1) + '~';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[23~';\n        }\n\n        break;\n\n      case 123:\n        if (modifiers) {\n          result.key = EscapeSequences_1.C0.ESC + '[24;' + (modifiers + 1) + '~';\n        } else {\n          result.key = EscapeSequences_1.C0.ESC + '[24~';\n        }\n\n        break;\n\n      default:\n        if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n          if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n            result.key = String.fromCharCode(ev.keyCode - 64);\n          } else if (ev.keyCode === 32) {\n            result.key = String.fromCharCode(0);\n          } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n            result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n          } else if (ev.keyCode === 56) {\n            result.key = String.fromCharCode(127);\n          } else if (ev.keyCode === 219) {\n            result.key = String.fromCharCode(27);\n          } else if (ev.keyCode === 220) {\n            result.key = String.fromCharCode(28);\n          } else if (ev.keyCode === 221) {\n            result.key = String.fromCharCode(29);\n          }\n        } else if ((!this.browser.isMac || this.options.macOptionIsMeta) && ev.altKey && !ev.ctrlKey && !ev.metaKey) {\n          if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n            result.key = EscapeSequences_1.C0.ESC + String.fromCharCode(ev.keyCode + 32);\n          } else if (ev.keyCode === 192) {\n            result.key = EscapeSequences_1.C0.ESC + '`';\n          } else if (ev.keyCode >= 48 && ev.keyCode <= 57) {\n            result.key = EscapeSequences_1.C0.ESC + (ev.keyCode - 48);\n          }\n        } else if (this.browser.isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n          if (ev.keyCode === 65) {\n            this.selectAll();\n          }\n        }\n\n        break;\n    }\n\n    return result;\n  };\n\n  Terminal.prototype.setgLevel = function (g) {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  };\n\n  Terminal.prototype.setgCharset = function (g, charset) {\n    this.charsets[g] = charset;\n\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  };\n\n  Terminal.prototype._keyPress = function (ev) {\n    var key;\n\n    if (this.customKeyEventHandler && this.customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which == null) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n    this.emit('keypress', key, ev);\n    this.emit('key', key, ev);\n    this.showCursor();\n    this.handler(key);\n    return true;\n  };\n\n  Terminal.prototype.send = function (data) {\n    var _this = this;\n\n    if (!this.sendDataQueue) {\n      setTimeout(function () {\n        _this.handler(_this.sendDataQueue);\n\n        _this.sendDataQueue = '';\n      }, 1);\n    }\n\n    this.sendDataQueue += data;\n  };\n\n  Terminal.prototype.bell = function () {\n    var _this = this;\n\n    this.emit('bell');\n    if (this.soundBell()) this.bellAudioElement.play();\n\n    if (this.visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this.visualBellTimer);\n      this.visualBellTimer = window.setTimeout(function () {\n        _this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  };\n\n  Terminal.prototype.log = function (text, data) {\n    if (!this.options.debug) return;\n    if (!this.context.console || !this.context.console.log) return;\n    this.context.console.log(text, data);\n  };\n\n  Terminal.prototype.error = function (text, data) {\n    if (!this.options.debug) return;\n    if (!this.context.console || !this.context.console.error) return;\n    this.context.console.error(text, data);\n  };\n\n  Terminal.prototype.resize = function (x, y) {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      if (!this.charMeasure.width || !this.charMeasure.height) {\n        this.charMeasure.measure(this.options);\n      }\n\n      return;\n    }\n\n    if (x < 1) x = 1;\n    if (y < 1) y = 1;\n    this.buffers.resize(x, y);\n    this.cols = x;\n    this.rows = y;\n    this.buffers.setupTabStops(this.cols);\n    this.charMeasure.measure(this.options);\n    this.refresh(0, this.rows - 1);\n    this.emit('resize', {\n      cols: x,\n      rows: y\n    });\n  };\n\n  Terminal.prototype.updateRange = function (y) {\n    if (y < this.refreshStart) this.refreshStart = y;\n    if (y > this.refreshEnd) this.refreshEnd = y;\n  };\n\n  Terminal.prototype.maxRange = function () {\n    this.refreshStart = 0;\n    this.refreshEnd = this.rows - 1;\n  };\n\n  Terminal.prototype.eraseRight = function (x, y) {\n    var line = this.buffer.lines.get(this.buffer.ybase + y);\n\n    if (!line) {\n      return;\n    }\n\n    var ch = [this.eraseAttr(), ' ', 1, 32];\n\n    for (; x < this.cols; x++) {\n      line[x] = ch;\n    }\n\n    this.updateRange(y);\n  };\n\n  Terminal.prototype.eraseLeft = function (x, y) {\n    var line = this.buffer.lines.get(this.buffer.ybase + y);\n\n    if (!line) {\n      return;\n    }\n\n    var ch = [this.eraseAttr(), ' ', 1, 32];\n    x++;\n\n    while (x--) {\n      line[x] = ch;\n    }\n\n    this.updateRange(y);\n  };\n\n  Terminal.prototype.clear = function () {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      return;\n    }\n\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n\n    for (var i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.blankLine());\n    }\n\n    this.refresh(0, this.rows - 1);\n    this.emit('scroll', this.buffer.ydisp);\n  };\n\n  Terminal.prototype.eraseLine = function (y) {\n    this.eraseRight(0, y);\n  };\n\n  Terminal.prototype.blankLine = function (cur, isWrapped, cols) {\n    var attr = cur ? this.eraseAttr() : this.defAttr;\n    var ch = [attr, ' ', 1, 32];\n    var line = [];\n\n    if (isWrapped) {\n      line.isWrapped = isWrapped;\n    }\n\n    cols = cols || this.cols;\n\n    for (var i = 0; i < cols; i++) {\n      line[i] = ch;\n    }\n\n    return line;\n  };\n\n  Terminal.prototype.ch = function (cur) {\n    if (cur) {\n      return [this.eraseAttr(), ' ', 1, 32];\n    }\n\n    return [this.defAttr, ' ', 1, 32];\n  };\n\n  Terminal.prototype.is = function (term) {\n    return (this.options.termName + '').indexOf(term) === 0;\n  };\n\n  Terminal.prototype.handler = function (data) {\n    if (this.options.disableStdin) {\n      return;\n    }\n\n    if (this.selectionManager && this.selectionManager.hasSelection) {\n      this.selectionManager.clearSelection();\n    }\n\n    if (this.buffer.ybase !== this.buffer.ydisp) {\n      this.scrollToBottom();\n    }\n\n    this.emit('data', data);\n  };\n\n  Terminal.prototype.handleTitle = function (title) {\n    this.emit('title', title);\n  };\n\n  Terminal.prototype.index = function () {\n    this.buffer.y++;\n\n    if (this.buffer.y > this.buffer.scrollBottom) {\n      this.buffer.y--;\n      this.scroll();\n    }\n\n    if (this.buffer.x >= this.cols) {\n      this.buffer.x--;\n    }\n  };\n\n  Terminal.prototype.reverseIndex = function () {\n    if (this.buffer.y === this.buffer.scrollTop) {\n      var scrollRegionHeight = this.buffer.scrollBottom - this.buffer.scrollTop;\n      this.buffer.lines.shiftElements(this.buffer.y + this.buffer.ybase, scrollRegionHeight, 1);\n      this.buffer.lines.set(this.buffer.y + this.buffer.ybase, this.blankLine(true));\n      this.updateRange(this.buffer.scrollTop);\n      this.updateRange(this.buffer.scrollBottom);\n    } else {\n      this.buffer.y--;\n    }\n  };\n\n  Terminal.prototype.reset = function () {\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    var customKeyEventHandler = this.customKeyEventHandler;\n    var inputHandler = this.inputHandler;\n    this.setup();\n    this.customKeyEventHandler = customKeyEventHandler;\n    this.inputHandler = inputHandler;\n    this.refresh(0, this.rows - 1);\n    this.viewport.syncScrollArea();\n  };\n\n  Terminal.prototype.tabSet = function () {\n    this.buffer.tabs[this.buffer.x] = true;\n  };\n\n  Terminal.prototype.cancel = function (ev, force) {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  };\n\n  Terminal.prototype.matchColor = function (r1, g1, b1) {\n    return matchColor_(r1, g1, b1);\n  };\n\n  Terminal.prototype.visualBell = function () {\n    return false;\n  };\n\n  Terminal.prototype.soundBell = function () {\n    return this.options.bellStyle === 'sound';\n  };\n\n  Terminal.prototype.syncBellSound = function () {\n    if (!this.element) {\n      return;\n    }\n\n    if (this.soundBell() && this.bellAudioElement) {\n      this.bellAudioElement.setAttribute('src', this.options.bellSound);\n    } else if (this.soundBell()) {\n      this.bellAudioElement = document.createElement('audio');\n      this.bellAudioElement.setAttribute('preload', 'auto');\n      this.bellAudioElement.setAttribute('src', this.options.bellSound);\n      this.helperContainer.appendChild(this.bellAudioElement);\n    } else if (this.bellAudioElement) {\n      this.helperContainer.removeChild(this.bellAudioElement);\n    }\n  };\n\n  return Terminal;\n}(EventEmitter_1.EventEmitter);\n\nexports.Terminal = Terminal;\n\nfunction globalOn(el, type, handler, capture) {\n  if (!Array.isArray(el)) {\n    el = [el];\n  }\n\n  el.forEach(function (element) {\n    element.addEventListener(type, handler, capture || false);\n  });\n}\n\nvar on = globalOn;\n\nfunction off(el, type, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  el.removeEventListener(type, handler, capture);\n}\n\nfunction wasMondifierKeyOnlyEvent(ev) {\n  return ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18;\n}\n\nvar vcolors = function () {\n  var result = ColorManager_1.DEFAULT_ANSI_COLORS.map(function (c) {\n    c = c.substring(1);\n    return [parseInt(c.substring(0, 2), 16), parseInt(c.substring(2, 4), 16), parseInt(c.substring(4, 6), 16)];\n  });\n  var r = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n\n  for (var i = 0; i < 216; i++) {\n    result.push([r[i / 36 % 6 | 0], r[i / 6 % 6 | 0], r[i % 6]]);\n  }\n\n  var c;\n\n  for (var i = 0; i < 24; i++) {\n    c = 8 + i * 10;\n    result.push([c, c, c]);\n  }\n\n  return result;\n}();\n\nvar matchColorCache = {};\n\nfunction matchColorDistance(r1, g1, b1, r2, g2, b2) {\n  return Math.pow(30 * (r1 - r2), 2) + Math.pow(59 * (g1 - g2), 2) + Math.pow(11 * (b1 - b2), 2);\n}\n\nfunction matchColor_(r1, g1, b1) {\n  var hash = r1 << 16 | g1 << 8 | b1;\n\n  if (matchColorCache[hash] != null) {\n    return matchColorCache[hash];\n  }\n\n  var ldiff = Infinity;\n  var li = -1;\n  var i = 0;\n  var c;\n  var r2;\n  var g2;\n  var b2;\n  var diff;\n\n  for (; i < vcolors.length; i++) {\n    c = vcolors[i];\n    r2 = c[0];\n    g2 = c[1];\n    b2 = c[2];\n    diff = matchColorDistance(r1, g1, b1, r2, g2, b2);\n\n    if (diff === 0) {\n      li = i;\n      break;\n    }\n\n    if (diff < ldiff) {\n      ldiff = diff;\n      li = i;\n    }\n  }\n\n  return matchColorCache[hash] = li;\n}","map":null,"metadata":{},"sourceType":"script"}