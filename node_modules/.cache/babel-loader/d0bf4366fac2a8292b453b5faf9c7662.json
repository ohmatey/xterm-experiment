{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Documents/projects/ols/xterm-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Documents/projects/ols/xterm-test/src/components/XtermTerminal.js\";\nimport React, { useState } from 'react';\nimport { Term } from '@dash4/react-xterm';\n\nconst XtermTerminal = () => {\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        term = _useState2[0],\n        setTerm = _useState2[1];\n\n  function handleTermRef(uid, xterm) {\n    setTerm(xterm);\n  }\n\n  function handleStart() {\n    term.write('npm start');\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Term, {\n    ref_: handleTermRef,\n    uid: 123,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"start\"));\n};\n\nexport default XtermTerminal;","map":{"version":3,"sources":["/Users/admin/Documents/projects/ols/xterm-test/src/components/XtermTerminal.js"],"names":["React","useState","Term","XtermTerminal","undefined","term","setTerm","handleTermRef","uid","xterm","handleStart","write"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,oBAArB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA,oBACFF,QAAQ,CAACG,SAAD,CADN;AAAA;AAAA,QACnBC,IADmB;AAAA,QACbC,OADa;;AAG1B,WAASC,aAAT,CAAuBC,GAAvB,EAA4BC,KAA5B,EAAmC;AACjCH,IAAAA,OAAO,CAACG,KAAD,CAAP;AACD;;AAED,WAASC,WAAT,GAAuB;AACrBL,IAAAA,IAAI,CAACM,KAAL,CAAW,WAAX;AACD;;AAED,SACE,0CACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEJ,aAAZ;AAA2B,IAAA,GAAG,EAAE,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAMD,CAjBD;;AAmBA,eAAeP,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Term } from '@dash4/react-xterm'\n\nconst XtermTerminal = () => {\n  const [term, setTerm] = useState(undefined)\n\n  function handleTermRef(uid, xterm) {\n    setTerm(xterm)\n  }\n\n  function handleStart() {\n    term.write('npm start')\n  }\n\n  return (\n    <>\n      <Term ref_={handleTermRef} uid={123} />\n      <button onClick={handleStart}>start</button>\n    </>\n  )\n}\n\nexport default XtermTerminal\n"]},"metadata":{},"sourceType":"module"}