{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar MouseHelper = function () {\n  function MouseHelper(_renderer) {\n    this._renderer = _renderer;\n  }\n\n  MouseHelper.getCoordsRelativeToElement = function (event, element) {\n    if (event.pageX == null) {\n      return null;\n    }\n\n    var originalElement = element;\n    var x = event.pageX;\n    var y = event.pageY;\n\n    while (element) {\n      x -= element.offsetLeft;\n      y -= element.offsetTop;\n      element = element.offsetParent;\n    }\n\n    element = originalElement;\n\n    while (element && element !== element.ownerDocument.body) {\n      x += element.scrollLeft;\n      y += element.scrollTop;\n      element = element.parentElement;\n    }\n\n    return [x, y];\n  };\n\n  MouseHelper.prototype.getCoords = function (event, element, charMeasure, lineHeight, colCount, rowCount, isSelection) {\n    if (!charMeasure.width || !charMeasure.height) {\n      return null;\n    }\n\n    var coords = MouseHelper.getCoordsRelativeToElement(event, element);\n\n    if (!coords) {\n      return null;\n    }\n\n    coords[0] = Math.ceil((coords[0] + (isSelection ? this._renderer.dimensions.actualCellWidth / 2 : 0)) / this._renderer.dimensions.actualCellWidth);\n    coords[1] = Math.ceil(coords[1] / this._renderer.dimensions.actualCellHeight);\n    coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n    coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n    return coords;\n  };\n\n  MouseHelper.prototype.getRawByteCoords = function (event, element, charMeasure, lineHeight, colCount, rowCount) {\n    var coords = this.getCoords(event, element, charMeasure, lineHeight, colCount, rowCount);\n    var x = coords[0];\n    var y = coords[1];\n    x += 32;\n    y += 32;\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  return MouseHelper;\n}();\n\nexports.MouseHelper = MouseHelper;","map":null,"metadata":{},"sourceType":"script"}