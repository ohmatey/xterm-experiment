{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharAtlasGenerator_1 = require(\"../shared/CharAtlasGenerator\");\n\nexports.CHAR_ATLAS_CELL_SPACING = 1;\nvar charAtlasCache = [];\n\nfunction acquireCharAtlas(terminal, colors, scaledCharWidth, scaledCharHeight) {\n  var newConfig = generateConfig(scaledCharWidth, scaledCharHeight, terminal, colors);\n\n  for (var i = 0; i < charAtlasCache.length; i++) {\n    var entry = charAtlasCache[i];\n    var ownedByIndex = entry.ownedBy.indexOf(terminal);\n\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.bitmap;\n      } else {\n        if (entry.ownedBy.length === 1) {\n          charAtlasCache.splice(i, 1);\n        } else {\n          entry.ownedBy.splice(ownedByIndex, 1);\n        }\n\n        break;\n      }\n    }\n  }\n\n  for (var i = 0; i < charAtlasCache.length; i++) {\n    var entry = charAtlasCache[i];\n\n    if (configEquals(entry.config, newConfig)) {\n      entry.ownedBy.push(terminal);\n      return entry.bitmap;\n    }\n  }\n\n  var canvasFactory = function (width, height) {\n    var canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  };\n\n  var charAtlasConfig = {\n    scaledCharWidth: scaledCharWidth,\n    scaledCharHeight: scaledCharHeight,\n    fontSize: terminal.options.fontSize,\n    fontFamily: terminal.options.fontFamily,\n    fontWeight: terminal.options.fontWeight,\n    fontWeightBold: terminal.options.fontWeightBold,\n    background: colors.background,\n    foreground: colors.foreground,\n    ansiColors: colors.ansi,\n    devicePixelRatio: window.devicePixelRatio,\n    allowTransparency: terminal.options.allowTransparency\n  };\n  var newEntry = {\n    bitmap: CharAtlasGenerator_1.generateCharAtlas(window, canvasFactory, charAtlasConfig),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.bitmap;\n}\n\nexports.acquireCharAtlas = acquireCharAtlas;\n\nfunction generateConfig(scaledCharWidth, scaledCharHeight, terminal, colors) {\n  var clonedColors = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: null,\n    cursorAccent: null,\n    selection: null,\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    scaledCharWidth: scaledCharWidth,\n    scaledCharHeight: scaledCharHeight,\n    fontFamily: terminal.options.fontFamily,\n    fontSize: terminal.options.fontSize,\n    fontWeight: terminal.options.fontWeight,\n    fontWeightBold: terminal.options.fontWeightBold,\n    allowTransparency: terminal.options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nfunction configEquals(a, b) {\n  for (var i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i] !== b.colors.ansi[i]) {\n      return false;\n    }\n  }\n\n  return a.fontFamily === b.fontFamily && a.fontSize === b.fontSize && a.fontWeight === b.fontWeight && a.fontWeightBold === b.fontWeightBold && a.allowTransparency === b.allowTransparency && a.scaledCharWidth === b.scaledCharWidth && a.scaledCharHeight === b.scaledCharHeight && a.colors.foreground === b.colors.foreground && a.colors.background === b.colors.background;\n}","map":null,"metadata":{},"sourceType":"script"}