{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar HOVER_DURATION = 500;\n\nvar MouseZoneManager = function () {\n  function MouseZoneManager(_terminal) {\n    var _this = this;\n\n    this._terminal = _terminal;\n    this._zones = [];\n    this._areZonesActive = false;\n    this._tooltipTimeout = null;\n    this._currentZone = null;\n    this._lastHoverCoords = [null, null];\n\n    this._terminal.element.addEventListener('mousedown', function (e) {\n      return _this._onMouseDown(e);\n    });\n\n    this._mouseMoveListener = function (e) {\n      return _this._onMouseMove(e);\n    };\n\n    this._clickListener = function (e) {\n      return _this._onClick(e);\n    };\n  }\n\n  MouseZoneManager.prototype.add = function (zone) {\n    this._zones.push(zone);\n\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  };\n\n  MouseZoneManager.prototype.clearAll = function (start, end) {\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    if (!end) {\n      start = 0;\n      end = this._terminal.rows - 1;\n    }\n\n    for (var i = 0; i < this._zones.length; i++) {\n      var zone = this._zones[i];\n\n      if (zone.y > start && zone.y <= end + 1) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n\n          this._currentZone = null;\n        }\n\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  };\n\n  MouseZoneManager.prototype._activate = function () {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n\n      this._terminal.element.addEventListener('mousemove', this._mouseMoveListener);\n\n      this._terminal.element.addEventListener('click', this._clickListener);\n    }\n  };\n\n  MouseZoneManager.prototype._deactivate = function () {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n\n      this._terminal.element.removeEventListener('mousemove', this._mouseMoveListener);\n\n      this._terminal.element.removeEventListener('click', this._clickListener);\n    }\n  };\n\n  MouseZoneManager.prototype._onMouseMove = function (e) {\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  };\n\n  MouseZoneManager.prototype._onHover = function (e) {\n    var _this = this;\n\n    var zone = this._findZoneEventAt(e);\n\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n\n      this._currentZone = null;\n\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    if (!zone) {\n      return;\n    }\n\n    this._currentZone = zone;\n\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    this._tooltipTimeout = setTimeout(function () {\n      return _this._onTooltip(e);\n    }, HOVER_DURATION);\n  };\n\n  MouseZoneManager.prototype._onTooltip = function (e) {\n    this._tooltipTimeout = null;\n\n    var zone = this._findZoneEventAt(e);\n\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  };\n\n  MouseZoneManager.prototype._onMouseDown = function (e) {\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    var zone = this._findZoneEventAt(e);\n\n    if (zone) {\n      if (zone.willLinkActivate(e)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n  };\n\n  MouseZoneManager.prototype._onClick = function (e) {\n    var zone = this._findZoneEventAt(e);\n\n    if (zone) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  };\n\n  MouseZoneManager.prototype._findZoneEventAt = function (e) {\n    var coords = this._terminal.mouseHelper.getCoords(e, this._terminal.screenElement, this._terminal.charMeasure, this._terminal.options.lineHeight, this._terminal.cols, this._terminal.rows);\n\n    if (!coords) {\n      return null;\n    }\n\n    for (var i = 0; i < this._zones.length; i++) {\n      var zone = this._zones[i];\n\n      if (zone.y === coords[1] && zone.x1 <= coords[0] && zone.x2 > coords[0]) {\n        return zone;\n      }\n    }\n\n    return null;\n  };\n\n  return MouseZoneManager;\n}();\n\nexports.MouseZoneManager = MouseZoneManager;\n\nvar MouseZone = function () {\n  function MouseZone(x1, x2, y, clickCallback, hoverCallback, tooltipCallback, leaveCallback, willLinkActivate) {\n    this.x1 = x1;\n    this.x2 = x2;\n    this.y = y;\n    this.clickCallback = clickCallback;\n    this.hoverCallback = hoverCallback;\n    this.tooltipCallback = tooltipCallback;\n    this.leaveCallback = leaveCallback;\n    this.willLinkActivate = willLinkActivate;\n  }\n\n  return MouseZone;\n}();\n\nexports.MouseZone = MouseZone;","map":null,"metadata":{},"sourceType":"script"}